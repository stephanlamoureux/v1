{"mappings":"YAMA,MAAMA,EAAaC,SAASC,iBAAiB,aACvCC,EAAQF,SAASC,iBAAiB,SAClCE,EAAOH,SAASI,cAAc,SAgBpCL,EAAWM,SAAQC,IAClBA,EAASC,iBAAiB,UAAU,KACnCP,SAASQ,KAAKC,UAAUC,OAAO,cAE3BV,SAASQ,KAAKC,UAAUE,SAAS,eACpCC,aAAaC,QAAQ,YAAa,WAClCX,EAAMG,SAAQS,IACbA,EAAKC,MAAMC,UAAY,uBAExBb,EAAKY,MAAME,YAAY,eAAgB,WAEvCL,aAAaC,QAAQ,YAAa,YAClCX,EAAMG,SAAQS,IACbA,EAAKC,MAAMG,WAAa,wBACxBJ,EAAKC,MAAMC,UAAY,qBAExBb,EAAKY,MAAME,YAAY,eAAgB,YAOC,YAAtCL,aAAaO,QAAQ,cACxBnB,SAASQ,KAAKC,UAAUW,IAAI,cAC5BlB,EAAMG,SAAQS,IACbA,EAAKC,MAAMG,WAAa,OACxBJ,EAAKC,MAAMC,UAAY,uBAExBb,EAAKY,MAAME,YAAY,eAAgB,WAEvCf,EAAMG,SAAQS,IACbA,EAAKC,MAAMC,UAAY,qBAExBb,EAAKY,MAAME,YAAY,eAAgB,YAKzC,MAAMI,EAAYrB,SAASC,iBAAiB,cACtCqB,EAAStB,SAASI,cAAc,wBAChCmB,EAAOvB,SAASI,cAAc,sBAC9BoB,EAASxB,SAASI,cAAc,uBAChCqB,EAAMzB,SAAS0B,eAAe,eAC9BC,EAAY3B,SAASI,cAAc,2BAIzC,SAASwB,IACRD,EAAUlB,UAAUC,OAAO,aAC3BY,EAAOb,UAAUC,OAAO,WAJzBa,EAAKhB,iBAAiB,QAASqB,GAQ/BP,EAAUhB,SAAQ,SAAUwB,GAC3BA,EAAStB,iBAAiB,QAASqB,MAIpC5B,SAASO,iBAAiB,SAASuB,IACVL,EAAId,SAASmB,EAAMC,UAE1CT,EAAOb,UAAUuB,OAAO,WACxBL,EAAUlB,UAAUuB,OAAO,iBAK7BV,EAAOf,iBAAiB,UAAUuB,IACdN,EAAOb,SAASmB,EAAMC,UAExCT,EAAOb,UAAUW,IAAI,WACrBO,EAAUlB,UAAUW,IAAI,iB","sources":["scripts/main.js"],"sourcesContent":["// import gtag, { install } from 'ga-gtag'\n\n// Google Analytics\n// install('G-YYTQ7PKV12')\n\n// Light Mode\nconst checkboxes = document.querySelectorAll('.checkbox')\nconst balls = document.querySelectorAll('.ball')\nconst root = document.querySelector(':root')\n\n/*\nEvent listeners for the toggle switches on the desktop nav and mobile nav.\n\nThe default mode is dark, so when the toggle is checked:\n1. Light mode stylesheet is enabled\n2. Local storage is updated to \"light mode: enabled\"\n3. The ball on both the desktop and mobile toggle is slid to the left\n\nWhen the toggle is unchecked:\n1. Light mode stylesheet is disabled\n2. Local storage is updated to \"light mode: disabled\"\n3. The ball on both the desktop and mobile toggle is slid to the right\n*/\n\ncheckboxes.forEach(checkbox => {\n\tcheckbox.addEventListener('change', () => {\n\t\tdocument.body.classList.toggle('light-mode')\n\n\t\tif (document.body.classList.contains('light-mode')) {\n\t\t\tlocalStorage.setItem('lightMode', 'enabled')\n\t\t\tballs.forEach(ball => {\n\t\t\t\tball.style.transform = 'translateX(-24px)'\n\t\t\t})\n\t\t\troot.style.setProperty('color-scheme', 'light')\n\t\t} else {\n\t\t\tlocalStorage.setItem('lightMode', 'disabled')\n\t\t\tballs.forEach(ball => {\n\t\t\t\tball.style.transition = 'transform 0.2s linear'\n\t\t\t\tball.style.transform = 'translateX(0px)'\n\t\t\t})\n\t\t\troot.style.setProperty('color-scheme', 'dark')\n\t\t}\n\t})\n\n\t// If the user has previously checked the light mode toggle\n\t// the page will load in light mode and vice versa using the same logic as above.\n\n\tif (localStorage.getItem('lightMode') === 'enabled') {\n\t\tdocument.body.classList.add('light-mode')\n\t\tballs.forEach(ball => {\n\t\t\tball.style.transition = 'none'\n\t\t\tball.style.transform = 'translateX(-24px)'\n\t\t})\n\t\troot.style.setProperty('color-scheme', 'light')\n\t} else {\n\t\tballs.forEach(ball => {\n\t\t\tball.style.transform = 'translateX(0px)'\n\t\t})\n\t\troot.style.setProperty('color-scheme', 'dark')\n\t}\n})\n\n// Mobile Nav\nconst menuLinks = document.querySelectorAll('.menu-link')\nconst navbar = document.querySelector('.nav-wrapper .navbar')\nconst menu = document.querySelector('.nav-wrapper .menu')\nconst toggle = document.querySelector('.mobile-mode-toggle')\nconst nav = document.getElementById('nav-wrapper')\nconst hamburger = document.querySelector('.nav-wrapper .hamburger')\n\nmenu.addEventListener('click', toggleMenu)\n\nfunction toggleMenu() {\n\thamburger.classList.toggle('is-active')\n\tnavbar.classList.toggle('showNav')\n}\n\n// Close the menu when a link is clicked\nmenuLinks.forEach(function (menuLink) {\n\tmenuLink.addEventListener('click', toggleMenu)\n})\n\n// Close the mobile nav menu when you click outside of it\ndocument.addEventListener('click', event => {\n\tconst isClickedInside = nav.contains(event.target)\n\tif (!isClickedInside) {\n\t\tnavbar.classList.remove('showNav')\n\t\thamburger.classList.remove('is-active')\n\t}\n})\n\n// Keep the mobile nav menu open when the color mode toggle is clicked\nnavbar.addEventListener('change', event => {\n\tconst modeToggle = toggle.contains(event.target)\n\tif (!modeToggle) {\n\t\tnavbar.classList.add('showNav')\n\t\thamburger.classList.add('is-active')\n\t}\n})\n"],"names":["$b1efc7bfc050c164$var$checkboxes","document","querySelectorAll","$b1efc7bfc050c164$var$balls","$b1efc7bfc050c164$var$root","querySelector","forEach","checkbox","addEventListener","body","classList","toggle","contains","localStorage","setItem","ball","style","transform","setProperty","transition","getItem","add","$b1efc7bfc050c164$var$menuLinks","$b1efc7bfc050c164$var$navbar","$b1efc7bfc050c164$var$menu","$b1efc7bfc050c164$var$toggle","$b1efc7bfc050c164$var$nav","getElementById","$b1efc7bfc050c164$var$hamburger","$b1efc7bfc050c164$var$toggleMenu","menuLink","event","target","remove"],"version":3,"file":"contact.4be7f126.js.map"}